plugins {
  id "distribution"
  id "org.ajoberstar.grgit" version "1.6.0"
}

ext {
  git = org.ajoberstar.grgit.Grgit.open(currentDir: project.projectDir)
  revision = git.head().id
  tagged = git.describe()
  gitVersion = tagged == null ?  "" : tagged.replaceFirst(/^(?i)v/, "")

  dockerBuild = file("${project.buildDir}/docker")
  dockerRepo = "rhapdocker:15001/bi/windocker"
}

group = "com.napster.bi"
version = gitVersion
description = "Scripts for setting up BI developer environment"

task wrapper(type: Wrapper) { gradleVersion = "3.3" }

distributions {
  main {
    contents {
      into('bin') { from 'bin' }
      into('lib') { from 'lib' }
    }
  }
}

task dockerBuildContext(type: Copy, dependsOn: distZip) {
  from "Dockerfile"
  from("bin/windocker.ps1") {
    filter { line ->
      line.replaceAll(~/WindockerVersion\s*=\s*""/, "WindockerVersion=\"$gitVersion\"")
    }
  }
  from("web/index.html") {
    filter { line -> 
      line.replaceAll(~/\$\{windocker.version\}/, gitVersion)
    }
  }
  from distZip.archivePath
  into dockerBuild
}

task buildImage(type: Exec, dependsOn: 'dockerBuildContext') {
  workingDir = dockerBuild
  environment("VERSION", gitVersion)
  commandLine "sudo", "docker", "build", "-t", "$dockerRepo:$gitVersion", "--build-arg", "VERSION=$gitVersion", "."
}

task pushImage(type: Exec, dependsOn: 'buildImage') {
  workingDir = dockerBuild
  commandLine "sudo", "docker", "push", "$dockerRepo:$gitVersion"
}

task tagImageAsLatest(type: Exec, dependsOn: 'pushImage') {
  workingDir = dockerBuild
  commandLine "sudo", "docker", "tag", "$dockerRepo:$gitVersion", dockerRepo
}

task pushImageAsLatest(type: Exec, dependsOn: 'tagImageAsLatest') {
  workingDir = dockerBuild
  commandLine "sudo", "docker", "push", dockerRepo
}
